{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Under development: 2019-2020 Welcome to plant genomics training Click on the topics in the left hand menu or use the search bar in the top right corner. This website provides training for plant genomics. It has been designed for the Australian plant genomics community as part of the Genomics for Australian Plants project, by Bioplatforms Australia. https://www.genomicsforaustralianplants.com/ This is a community resource and contributions, additions, suggestions are welcome - please email anna.syme @ rbg.vic.gov.au","title":"Home"},{"location":"#welcome-to-plant-genomics-training","text":"Click on the topics in the left hand menu or use the search bar in the top right corner. This website provides training for plant genomics. It has been designed for the Australian plant genomics community as part of the Genomics for Australian Plants project, by Bioplatforms Australia. https://www.genomicsforaustralianplants.com/ This is a community resource and contributions, additions, suggestions are welcome - please email anna.syme @ rbg.vic.gov.au","title":"Welcome to plant genomics training"},{"location":"modules/assembly/","text":"Assembly tools Canu For noisy long-read assemblies. Github: https://github.com/marbl/canu Manual: https://canu.readthedocs.io/en/latest/ wtdbg2 For noisy long-read assemblies. Does not error-correct the reads: fast; uses \u201cfuzzy\u201d de Bruijn graphs. Github: https://github.com/ruanjue/wtdbg2 Masurca Joins short reads into super-reads; for hybrid assemblies Github: https://github.com/alekseyzimin/masurca/releases Blog: http://masurca.blogspot.com/ Flye For noisy long-read assemblies Does not error-correct the reads: fast. Github: https://github.com/fenderglass/Flye Supernova For assembling 10x (linked) reads Information: https://support.10xgenomics.com/de-novo-assembly/software/pipelines/latest/using/running miniasm https://github.com/lh3/miniasm Racon Pilon Nanopolish","title":"Assembly"},{"location":"modules/assembly/#assembly-tools","text":"Canu For noisy long-read assemblies. Github: https://github.com/marbl/canu Manual: https://canu.readthedocs.io/en/latest/ wtdbg2 For noisy long-read assemblies. Does not error-correct the reads: fast; uses \u201cfuzzy\u201d de Bruijn graphs. Github: https://github.com/ruanjue/wtdbg2 Masurca Joins short reads into super-reads; for hybrid assemblies Github: https://github.com/alekseyzimin/masurca/releases Blog: http://masurca.blogspot.com/ Flye For noisy long-read assemblies Does not error-correct the reads: fast. Github: https://github.com/fenderglass/Flye Supernova For assembling 10x (linked) reads Information: https://support.10xgenomics.com/de-novo-assembly/software/pipelines/latest/using/running miniasm https://github.com/lh3/miniasm Racon Pilon Nanopolish","title":"Assembly tools"},{"location":"modules/chloroplast_assembly/","text":"Assemble and annotate a chloroplast genome What is genome assembly? Genome assembly is the process of joining together DNA sequencing fragments into longer pieces, ideally up to chromosome lengths. The DNA fragments are produced by DNA sequencing machines, and are called \u201creads\u201d. These are in lengths of about 150 base pairs, to up to a million (or more) base pairs, depending on the sequencing technology used. Currently, most reads are from Illumina (short), PacBio (long) or Oxford Nanopore (long and extra-long). It is difficult to assemble plant genomes as they are often large (for example, 3,000,000,000 base pairs), have many repeat regions (such as transposons), and may be polyploid. This tutorial shows genome assembly for a smaller data set - the plant chloroplast genome - a circular chromosome about 160,000 base pairs long. The process shown here is applicable to assembling plant nuclear genomes but there would be extra steps (and much more time) involved. For example, additional sequencing would usually be run on 10X, BioNano or HiC to produce information to link up longer nuclear chromosome pieces and to separate out the maternal and paternal haplotypes. Tutorial overview The chloroplast genome of the sweet potato has been sequenced. This has produced many sequencing reads - DNA fragments. We will try to join these reads together to make the whole chloroplast genome sequence. We will use the Galaxy Australia platform (a web page) to run our analysis. This tutorial assumes some familiarity with Galaxy and bioinformatics - if you are new to either of these, we recommend the Galaxy Australia Training tutorials Get started, Learn key tasks, Quality control, Genome assembly, and Genome annotation . Import the data Log in to Galaxy Australia and create a new history. The data is from this paper: Zhou C, Duarte T, Silvestre R et al. 2018 , hosted at EBI ENA. Original FASTQ reads: illumina (SRR6828568) and nanopore (SRR6828567). These data sets have been highly reduced in size for this tutorial. In a new browser tab, go to this webpage at this link . Find the file called mutant_R1.fastq Right click on file name: select \u201ccopy link address\u201d In Galaxy, go to Get Data and then Upload File Click Paste/Fetch data A box will appear: paste in link address Click Start Click Close The file will now appear in the top of your history panel. Repeat for mutant_R2.fastq . We now have tow FastQ read files in our history. Click on the eye icon next to one of the FASTQ sequence files. View the file in the centre Galaxy panel. Look at the read quality In the tool panel, search for Nanoplot [to do - run details] [to do - results] what does it mean, see sweet potato nanoplot - why is weighted histogram of read lengths have some that are in negative?? eg NanoStats average read length = 7000 av quality = 10 2000 reads 13 million bases Assemble the nanopore reads In the tool panel, search for ?Assembly? or flye leave settings as default; add genome size 160000 rename scaffolds as flye.fasta Click Execute view outputs in summary: three contigs, one of these is in two directions; then joins these together. 1/ scaffolds (2 contigs): re-name flye.fasta 2/ info (contigs as above, but shows the parts within these contigs) 3/ graph_dot (what\u2019s connected - eg1->0->3->2->1) 4/ gfa (seqs: contigs 1 2 and 3 and connecting info). 5/ log. can see that the order of doing stuff is: write fasta (=the three contigs? where is this?), generates scaffold connections, write dot, write fasta (=scaffolds? just the two contigs?), write gfa (the three contigs), polishes gfa (but doesn\u2019t write it?? \u2013 re do with no polish. ) fasta stats re-name as stats flye.fasta View the assembly graph download gfa and view in bandage, see inv reps and contig sizes. [Note: discussion Qu: to join or not join contigs] [Note: further investigate: is this ambiguity (ie the join between the two contigs) due to structural heteroplasmy?] Polish the assembly with short reads Short illumina reads are more accurate the nanopore reads. We will use them to correct errors in the nanopore assembly. Map illumina to flye scaffolds: bwa mem use a genome from history: flye.fasta reads: single fastq: illumina-reduced.fastq analysis mode: illumina => bam file: re-name illumina.bam Pilon [option: run a second round of polishing. keep track of file naming, and will need to generate a new bam [map illumina reads to polished.fasta]]] with Illumina bam and ref (=flye scaffolds) other settings default => fasta: re-name as polished.fasta => VCF: re-name pilon.vcf Fasta stats on polished.fasta What changed how many changes rename stats polished.fasta View read alignments Get cutdown nano and illumina reads for viewing in bams View all histories: see History: chloroplast-tutorial-data - drag sweet-potato-nanopore-tiny.fastq and sweet-potato-illumina-tiny.fastq click Analyze Data Map tiny nano to polished.fasta with bwa-mem bwa mem single reads analysis: nano mode => bam re-name as nanopore-tiny.bam map tiny illumina to polished.fasta with bwa-mem bwa mem single reads analysis: illumina mode => bam re-name as illumina-tiny.bam JBrowse on polished.fasta and nano-bam and illumina-bam ref = polished.fasta genetic code = 11 Insert Track Group Insert Annotation Track Track type: BAM pileups BAM track data: nanopore-tiny.bam Insert Annotation Track Track type: BAM pileups BAM track data: illumina-tiny.bam => JBrowse. re-name: e.g. view flye.fasta and seq reads Two contigs in drop down. zoom all the way out zoom all the way in change ref seq display. see diffs bn long error nano reads and short low-error illumina reads note that the coverage is quite uneven, but that these reads could have bias as they are those that mapped to a certain set of cp genomes. If this new genome has new bits, these may be in the long-read assembly but missing in short reads. Why would the polished assembly (the ref track) be different to the reads - wouldn\u2019t these snps correct these places? maybe would need another round+ of polishing. Annotate Annotation is .... download the polished.fasta https://chlorobox.mpimp-golm.mpg.de/geseq.html web: geseq: upload the fasta file. linear options: generate codon-based alignments Blat - default hmmer - tick emrbyophyta argaron tick tRNAscan - tick accept disclaimer submit: (5 mins): tutorial break contigA: gff3: click on it: click download at the bottom contigB: repeat click on ogdraw to look [Note: can see the repeated 16sRNA and 23sRNA \u2013 although one of sets only has fragments? not full length? \u2013 also, where does the Inverted Repeat start - is is ycf2?] upload geseq.gff3 to galaxy Get data choose local file x2, start, close JBrowse: geseq.gff3 and polished.fasta two contigs re-name view polished.fasta annotations [note: two gff tracks displayed under each but one will be empty under each.] annotation: a constantly-improving process as more info for matching to seq string, seq structure, etc. can be multiple annotations under each feature depending on the database matched. [option: repeat jbrowse, add the barrnap gff track to compare where that mapped the rRNAs - can see that the geseq annotation is slightly different] Extension exercise: assemble the snow gum chloroplast genome See this history in Galaxy If you want to see this Galaxy history without performing the steps above: Log in to Galaxy Australia: https://usegalaxy.org.au/ Go to Shared Data Click Histories Click Completed-assembly-analysis Click Import (at the top right corner) The analysis should now be showing as your current history. See this workflow in Galaxy What\u2019s next? You can find more tutorials at Galaxy Australia Training and the Galaxy Training Network: http://galaxyproject.github.io/training-material/","title":"Genome assembly"},{"location":"modules/chloroplast_assembly/#assemble-and-annotate-a-chloroplast-genome","text":"","title":"Assemble and annotate a chloroplast genome"},{"location":"modules/chloroplast_assembly/#what-is-genome-assembly","text":"Genome assembly is the process of joining together DNA sequencing fragments into longer pieces, ideally up to chromosome lengths. The DNA fragments are produced by DNA sequencing machines, and are called \u201creads\u201d. These are in lengths of about 150 base pairs, to up to a million (or more) base pairs, depending on the sequencing technology used. Currently, most reads are from Illumina (short), PacBio (long) or Oxford Nanopore (long and extra-long). It is difficult to assemble plant genomes as they are often large (for example, 3,000,000,000 base pairs), have many repeat regions (such as transposons), and may be polyploid. This tutorial shows genome assembly for a smaller data set - the plant chloroplast genome - a circular chromosome about 160,000 base pairs long. The process shown here is applicable to assembling plant nuclear genomes but there would be extra steps (and much more time) involved. For example, additional sequencing would usually be run on 10X, BioNano or HiC to produce information to link up longer nuclear chromosome pieces and to separate out the maternal and paternal haplotypes.","title":"What is genome assembly?"},{"location":"modules/chloroplast_assembly/#tutorial-overview","text":"The chloroplast genome of the sweet potato has been sequenced. This has produced many sequencing reads - DNA fragments. We will try to join these reads together to make the whole chloroplast genome sequence. We will use the Galaxy Australia platform (a web page) to run our analysis. This tutorial assumes some familiarity with Galaxy and bioinformatics - if you are new to either of these, we recommend the Galaxy Australia Training tutorials Get started, Learn key tasks, Quality control, Genome assembly, and Genome annotation .","title":"Tutorial overview"},{"location":"modules/chloroplast_assembly/#import-the-data","text":"Log in to Galaxy Australia and create a new history. The data is from this paper: Zhou C, Duarte T, Silvestre R et al. 2018 , hosted at EBI ENA. Original FASTQ reads: illumina (SRR6828568) and nanopore (SRR6828567). These data sets have been highly reduced in size for this tutorial. In a new browser tab, go to this webpage at this link . Find the file called mutant_R1.fastq Right click on file name: select \u201ccopy link address\u201d In Galaxy, go to Get Data and then Upload File Click Paste/Fetch data A box will appear: paste in link address Click Start Click Close The file will now appear in the top of your history panel. Repeat for mutant_R2.fastq . We now have tow FastQ read files in our history. Click on the eye icon next to one of the FASTQ sequence files. View the file in the centre Galaxy panel.","title":"Import the data"},{"location":"modules/chloroplast_assembly/#look-at-the-read-quality","text":"In the tool panel, search for Nanoplot [to do - run details] [to do - results] what does it mean, see sweet potato nanoplot - why is weighted histogram of read lengths have some that are in negative?? eg NanoStats average read length = 7000 av quality = 10 2000 reads 13 million bases","title":"Look at the read quality"},{"location":"modules/chloroplast_assembly/#assemble-the-nanopore-reads","text":"In the tool panel, search for ?Assembly? or flye leave settings as default; add genome size 160000 rename scaffolds as flye.fasta Click Execute view outputs in summary: three contigs, one of these is in two directions; then joins these together. 1/ scaffolds (2 contigs): re-name flye.fasta 2/ info (contigs as above, but shows the parts within these contigs) 3/ graph_dot (what\u2019s connected - eg1->0->3->2->1) 4/ gfa (seqs: contigs 1 2 and 3 and connecting info). 5/ log. can see that the order of doing stuff is: write fasta (=the three contigs? where is this?), generates scaffold connections, write dot, write fasta (=scaffolds? just the two contigs?), write gfa (the three contigs), polishes gfa (but doesn\u2019t write it?? \u2013 re do with no polish. ) fasta stats re-name as stats flye.fasta","title":"Assemble the nanopore reads"},{"location":"modules/chloroplast_assembly/#view-the-assembly-graph","text":"download gfa and view in bandage, see inv reps and contig sizes. [Note: discussion Qu: to join or not join contigs] [Note: further investigate: is this ambiguity (ie the join between the two contigs) due to structural heteroplasmy?]","title":"View the assembly graph"},{"location":"modules/chloroplast_assembly/#polish-the-assembly-with-short-reads","text":"Short illumina reads are more accurate the nanopore reads. We will use them to correct errors in the nanopore assembly. Map illumina to flye scaffolds: bwa mem use a genome from history: flye.fasta reads: single fastq: illumina-reduced.fastq analysis mode: illumina => bam file: re-name illumina.bam Pilon [option: run a second round of polishing. keep track of file naming, and will need to generate a new bam [map illumina reads to polished.fasta]]] with Illumina bam and ref (=flye scaffolds) other settings default => fasta: re-name as polished.fasta => VCF: re-name pilon.vcf Fasta stats on polished.fasta What changed how many changes rename stats polished.fasta","title":"Polish the assembly with short reads"},{"location":"modules/chloroplast_assembly/#view-read-alignments","text":"Get cutdown nano and illumina reads for viewing in bams View all histories: see History: chloroplast-tutorial-data - drag sweet-potato-nanopore-tiny.fastq and sweet-potato-illumina-tiny.fastq click Analyze Data Map tiny nano to polished.fasta with bwa-mem bwa mem single reads analysis: nano mode => bam re-name as nanopore-tiny.bam map tiny illumina to polished.fasta with bwa-mem bwa mem single reads analysis: illumina mode => bam re-name as illumina-tiny.bam JBrowse on polished.fasta and nano-bam and illumina-bam ref = polished.fasta genetic code = 11 Insert Track Group Insert Annotation Track Track type: BAM pileups BAM track data: nanopore-tiny.bam Insert Annotation Track Track type: BAM pileups BAM track data: illumina-tiny.bam => JBrowse. re-name: e.g. view flye.fasta and seq reads Two contigs in drop down. zoom all the way out zoom all the way in change ref seq display. see diffs bn long error nano reads and short low-error illumina reads note that the coverage is quite uneven, but that these reads could have bias as they are those that mapped to a certain set of cp genomes. If this new genome has new bits, these may be in the long-read assembly but missing in short reads. Why would the polished assembly (the ref track) be different to the reads - wouldn\u2019t these snps correct these places? maybe would need another round+ of polishing.","title":"View read alignments"},{"location":"modules/chloroplast_assembly/#annotate","text":"Annotation is .... download the polished.fasta https://chlorobox.mpimp-golm.mpg.de/geseq.html web: geseq: upload the fasta file. linear options: generate codon-based alignments Blat - default hmmer - tick emrbyophyta argaron tick tRNAscan - tick accept disclaimer submit: (5 mins): tutorial break contigA: gff3: click on it: click download at the bottom contigB: repeat click on ogdraw to look [Note: can see the repeated 16sRNA and 23sRNA \u2013 although one of sets only has fragments? not full length? \u2013 also, where does the Inverted Repeat start - is is ycf2?] upload geseq.gff3 to galaxy Get data choose local file x2, start, close JBrowse: geseq.gff3 and polished.fasta two contigs re-name view polished.fasta annotations [note: two gff tracks displayed under each but one will be empty under each.] annotation: a constantly-improving process as more info for matching to seq string, seq structure, etc. can be multiple annotations under each feature depending on the database matched. [option: repeat jbrowse, add the barrnap gff track to compare where that mapped the rRNAs - can see that the geseq annotation is slightly different] Extension exercise: assemble the snow gum chloroplast genome","title":"Annotate"},{"location":"modules/chloroplast_assembly/#see-this-history-in-galaxy","text":"If you want to see this Galaxy history without performing the steps above: Log in to Galaxy Australia: https://usegalaxy.org.au/ Go to Shared Data Click Histories Click Completed-assembly-analysis Click Import (at the top right corner) The analysis should now be showing as your current history.","title":"See this history in Galaxy"},{"location":"modules/chloroplast_assembly/#see-this-workflow-in-galaxy","text":"","title":"See this workflow in Galaxy"},{"location":"modules/chloroplast_assembly/#whats-next","text":"You can find more tutorials at Galaxy Australia Training and the Galaxy Training Network: http://galaxyproject.github.io/training-material/","title":"What's next?"},{"location":"modules/data/","text":"How to get data When running bioinformatics analyses on the command-line, you may wish to use publically-available data for testing or for analysis. Some examples of how to do this are given here, along with sample datasets. Get data with wget or curl wget [address of file] curl [address of file] More about wget: https://en.wikipedia.org/wiki/Wget More about curl: https://en.wikipedia.org/wiki/CURL SRA Toolkit Find some SRR numbers for reads you are interested in (search NCBI\u2019s SRA ) fastq-dump SRR[number goes here] Note: the SRR numbers refer to the sequencing run. https://www.ncbi.nlm.nih.gov/sra/docs/submitmeta/ Note: fasterq-dump is now also supported and fastq-dump may be deprecated in the future. More about the SRA Toolkit: https://github.com/ncbi/sra-tools/wiki Sample sequencing data PacBio reads From Canu\u2019s quickstart page: curl -L -o pacbio.fastq \\ http://gembox.cbcb.umd.edu/mhap/raw/ecoli_p6_25x.filtered.fastq Synthetic PacBio data wget https://zenodo.org/record/1009308/files/pacbio.fq?download=1 Nanopore reads From Canu\u2019s quickstart page; data from the Loman lab: curl -L -o oxford.fasta \\ http://nanopore.s3.climb.ac.uk/MAP006-PCR-1_2D_pass.fasta Downsampled nanopore data wget \\ https://zenodo.org/record/842795/files/minion_1.2d_pass.fastq.fastqsanger?download=1 fast5 files https://figshare.com/articles/Raw_ONT_reads_-_barcode_1/5353210 10X (linked) reads https://www.10xgenomics.com/resources/datasets/","title":"Data"},{"location":"modules/data/#how-to-get-data","text":"When running bioinformatics analyses on the command-line, you may wish to use publically-available data for testing or for analysis. Some examples of how to do this are given here, along with sample datasets. Get data with wget or curl wget [address of file] curl [address of file] More about wget: https://en.wikipedia.org/wiki/Wget More about curl: https://en.wikipedia.org/wiki/CURL SRA Toolkit Find some SRR numbers for reads you are interested in (search NCBI\u2019s SRA ) fastq-dump SRR[number goes here] Note: the SRR numbers refer to the sequencing run. https://www.ncbi.nlm.nih.gov/sra/docs/submitmeta/ Note: fasterq-dump is now also supported and fastq-dump may be deprecated in the future. More about the SRA Toolkit: https://github.com/ncbi/sra-tools/wiki Sample sequencing data PacBio reads From Canu\u2019s quickstart page: curl -L -o pacbio.fastq \\ http://gembox.cbcb.umd.edu/mhap/raw/ecoli_p6_25x.filtered.fastq Synthetic PacBio data wget https://zenodo.org/record/1009308/files/pacbio.fq?download=1 Nanopore reads From Canu\u2019s quickstart page; data from the Loman lab: curl -L -o oxford.fasta \\ http://nanopore.s3.climb.ac.uk/MAP006-PCR-1_2D_pass.fasta Downsampled nanopore data wget \\ https://zenodo.org/record/842795/files/minion_1.2d_pass.fastq.fastqsanger?download=1 fast5 files https://figshare.com/articles/Raw_ONT_reads_-_barcode_1/5353210 10X (linked) reads https://www.10xgenomics.com/resources/datasets/","title":"How to get data"},{"location":"modules/databases/","text":"Databases Overview This page has links to databases for sequences, tools, workflows and plants. Some of these databases are for one plant species only; some are for a selection of species with tools to compare genome features. Most of these databases are linked to at least one other database by inputs or outputs. Databases are sometimes abandoned - look at the most recent update/release or news on the start page to find out if it is current. The ones in the links below seem to be active. There is no single standard repository for annotated genomes: these are held across various databases. Sequences and genome browsers NCBI: Sequence Read Archive: https://www.ncbi.nlm.nih.gov/sra NCBI: Genomes: https://www.ncbi.nlm.nih.gov/home/genomes/ NCBI: RefSeq: https://www.ncbi.nlm.nih.gov/refseq/ European Nucleotide Archive: (a mirror of NCBI but with different search options): https://www.ebi.ac.uk/ena Protein Databank: https://www.rcsb.org/ UniProt : protein sequences: https://www.uniprot.org/ Ensembl Plants https://plants.ensembl.org/index.html JGI Phytozome: https://phytozome.jgi.doe.gov/pz/portal.html UCSC Genome Browser: https://genome.ucsc.edu/index.html TAIR - Arabidopsis thaliana https://www.arabidopsis.org/ Genome database for Rosaceae https://www.rosaceae.org/ Gramene - crops and model plant species http://gramene.org/ PlaBiPD - includes a chronology and phylogeny of pubplished plant genomes: https://plabipd.de/index.ep PLAZA https://bioinformatics.psb.ugent.be/plaza/ Plants and morphology Flora of Australia https://profiles.ala.org.au/opus/foa Plant traits https://www.try-db.org/TryWeb/Home.php Tools, containers, workflows Search for tools: https://bio.tools/ Tools for working with long reads: BioContainers: containers for bioinformatics https://biocontainers.pro/#/ Docker Hub: docker containers https://hub.docker.com/ nf-core: Nextflow workflows: https://nf-co.re/","title":"Databases"},{"location":"modules/databases/#databases","text":"Overview This page has links to databases for sequences, tools, workflows and plants. Some of these databases are for one plant species only; some are for a selection of species with tools to compare genome features. Most of these databases are linked to at least one other database by inputs or outputs. Databases are sometimes abandoned - look at the most recent update/release or news on the start page to find out if it is current. The ones in the links below seem to be active. There is no single standard repository for annotated genomes: these are held across various databases. Sequences and genome browsers NCBI: Sequence Read Archive: https://www.ncbi.nlm.nih.gov/sra NCBI: Genomes: https://www.ncbi.nlm.nih.gov/home/genomes/ NCBI: RefSeq: https://www.ncbi.nlm.nih.gov/refseq/ European Nucleotide Archive: (a mirror of NCBI but with different search options): https://www.ebi.ac.uk/ena Protein Databank: https://www.rcsb.org/ UniProt : protein sequences: https://www.uniprot.org/ Ensembl Plants https://plants.ensembl.org/index.html JGI Phytozome: https://phytozome.jgi.doe.gov/pz/portal.html UCSC Genome Browser: https://genome.ucsc.edu/index.html TAIR - Arabidopsis thaliana https://www.arabidopsis.org/ Genome database for Rosaceae https://www.rosaceae.org/ Gramene - crops and model plant species http://gramene.org/ PlaBiPD - includes a chronology and phylogeny of pubplished plant genomes: https://plabipd.de/index.ep PLAZA https://bioinformatics.psb.ugent.be/plaza/ Plants and morphology Flora of Australia https://profiles.ala.org.au/opus/foa Plant traits https://www.try-db.org/TryWeb/Home.php Tools, containers, workflows Search for tools: https://bio.tools/ Tools for working with long reads: BioContainers: containers for bioinformatics https://biocontainers.pro/#/ Docker Hub: docker containers https://hub.docker.com/ nf-core: Nextflow workflows: https://nf-co.re/","title":"Databases"},{"location":"modules/docker/","text":"Containers Containers are a collection of tools and their dependencies, packaged into a file. You can download and run this file and its software, without directly installing the software itself. Types of containers: Docker, Singularity The basics Download and install Docker Desktop: https://www.docker.com/products/docker-desktop Open docker (e.g.: if it\u2019s running, it may show an icon in the top menu bar). In the terminal (or equivalent): docker pull busybox //pulls the image named \"busybox\" from DockerHub docker run busybox //creates the container, then exits if no tasks are running docker run busybox ls //creates container, lists files, exits docker image ls //lists all docker images docker --help // docker help Getting files in and out of containers We will make a folder that can get share files with our containers. In your home directory (/Users/yourname/): mkdir workspace cd workspace docker run -v /Users/[yourname]/workspace:/data/ busybox touch data/plantfile -v connectes our local \u201cworkspace\u201d folder with a \u201cdata\u201d folder in the container. Around this, we docker run busybox Finally, we create a file with touch data/plantfile Example: assemble and annotate a bacterial genome Get some sample data files (synthetic bacterial illumina reads): wget https://zenodo.org/record/582600/files/mutant_R1.fastq?download=1 wget https://zenodo.org/record/582600/files/mutant_R2.fastq?download=1 Shorten the names: mv mutant_R1.fastq?download=1 mutant_R1.fastq mv mutant_R2.fastq?download=1 mutant_R2.fastq Run the assembly tool (spades) in a container: docker run -v /Users/[yourname]/workspace:/data/ quay.io/biocontainers/spades:3.13.0--0 ./usr/local/bin/spades.py -1 data/mutant_R1.fastq -2 data/mutant_R2.fastq -o data/spades_outdir quay.io/biocontainers/spades:3.13.0\u20130 is the image name ./usr/local/bin/spades.py is the command to run spades -1 specifies the file with forward reads, data/mutant_R1.fastq -2 specifies the file with reverse reads, data/mutant_R2.fastq -o specifies the output directory, data/spades_outdir ls //to see the output files in your local workspace folder Move the assembled reads - the contigs file - into the workspace folder: mv spades_outdir/contigs.fasta . Run the annotation tool (prokka) in a container: docker run -v /Users/[yourname]/workspace:/data/ ummidock/prokka:1.13.3-01 prokka contigs.fasta ummidock/prokka:1.13.3-01 is the image name prokka is the command to run prokka the input file is contigs.fasta this container has been configured to start within the data folder, so \u201cdata/\u201d is not needed before the input file this container has also been configured to put output in the data folder, so it is not necessary to specify an output directory name ls //to see the annotation output cd PROKKA_outfile_name less PROKKA_outfile.txt //summary of annotation Troubleshooting How do we know what the command is to run the tool? Run the container interactively: e.g. docker run -it ummidock/prokka:1.13.3-01 Try the tool name and the help flag: e.g. prokka -h How do we know if the container has a data folder? Run the container, print the working directory: e.g. docker run ummidock/prokka:1.13.3-01 pwd If the working directory is called \u201cworkdir\u201d, use that in place of \u201cdata\u201d e.g. -v /Users/[yourname]/workspace:/workdir/ Links Docker: https://docs.docker.com/get-started/","title":"Docker"},{"location":"modules/docker/#containers","text":"Containers are a collection of tools and their dependencies, packaged into a file. You can download and run this file and its software, without directly installing the software itself. Types of containers: Docker, Singularity","title":"Containers"},{"location":"modules/docker/#the-basics","text":"Download and install Docker Desktop: https://www.docker.com/products/docker-desktop Open docker (e.g.: if it\u2019s running, it may show an icon in the top menu bar). In the terminal (or equivalent): docker pull busybox //pulls the image named \"busybox\" from DockerHub docker run busybox //creates the container, then exits if no tasks are running docker run busybox ls //creates container, lists files, exits docker image ls //lists all docker images docker --help // docker help","title":"The basics"},{"location":"modules/docker/#getting-files-in-and-out-of-containers","text":"We will make a folder that can get share files with our containers. In your home directory (/Users/yourname/): mkdir workspace cd workspace docker run -v /Users/[yourname]/workspace:/data/ busybox touch data/plantfile -v connectes our local \u201cworkspace\u201d folder with a \u201cdata\u201d folder in the container. Around this, we docker run busybox Finally, we create a file with touch data/plantfile","title":"Getting files in and out of containers"},{"location":"modules/docker/#example-assemble-and-annotate-a-bacterial-genome","text":"Get some sample data files (synthetic bacterial illumina reads): wget https://zenodo.org/record/582600/files/mutant_R1.fastq?download=1 wget https://zenodo.org/record/582600/files/mutant_R2.fastq?download=1 Shorten the names: mv mutant_R1.fastq?download=1 mutant_R1.fastq mv mutant_R2.fastq?download=1 mutant_R2.fastq Run the assembly tool (spades) in a container: docker run -v /Users/[yourname]/workspace:/data/ quay.io/biocontainers/spades:3.13.0--0 ./usr/local/bin/spades.py -1 data/mutant_R1.fastq -2 data/mutant_R2.fastq -o data/spades_outdir quay.io/biocontainers/spades:3.13.0\u20130 is the image name ./usr/local/bin/spades.py is the command to run spades -1 specifies the file with forward reads, data/mutant_R1.fastq -2 specifies the file with reverse reads, data/mutant_R2.fastq -o specifies the output directory, data/spades_outdir ls //to see the output files in your local workspace folder Move the assembled reads - the contigs file - into the workspace folder: mv spades_outdir/contigs.fasta . Run the annotation tool (prokka) in a container: docker run -v /Users/[yourname]/workspace:/data/ ummidock/prokka:1.13.3-01 prokka contigs.fasta ummidock/prokka:1.13.3-01 is the image name prokka is the command to run prokka the input file is contigs.fasta this container has been configured to start within the data folder, so \u201cdata/\u201d is not needed before the input file this container has also been configured to put output in the data folder, so it is not necessary to specify an output directory name ls //to see the annotation output cd PROKKA_outfile_name less PROKKA_outfile.txt //summary of annotation","title":"Example: assemble and annotate a bacterial genome"},{"location":"modules/docker/#troubleshooting","text":"How do we know what the command is to run the tool? Run the container interactively: e.g. docker run -it ummidock/prokka:1.13.3-01 Try the tool name and the help flag: e.g. prokka -h How do we know if the container has a data folder? Run the container, print the working directory: e.g. docker run ummidock/prokka:1.13.3-01 pwd If the working directory is called \u201cworkdir\u201d, use that in place of \u201cdata\u201d e.g. -v /Users/[yourname]/workspace:/workdir/","title":"Troubleshooting"},{"location":"modules/docker/#links","text":"Docker: https://docs.docker.com/get-started/","title":"Links"},{"location":"modules/envs/","text":"Set up a vitual environment A virtual environment is an area to work in that is associated with certain tools and versions. It is often useful to work on different bioinformatics analyses or tasks in different virtual environments, as they may rely on particular versions of tools. One way to set this up is to use a package manager called conda. Install miniconda: https://docs.conda.io/en/latest/miniconda.html In the terminal (or equivalent), set up the bioconda channel: (More information: https://bioconda.github.io/ ) conda config --add channels defaults conda config --add channels bioconda conda config --add channels conda-forge This example shows how to set up and use an environment: conda create --name mrbayes //create new environment called mrbayes conda activate mrbayes //activate this environment conda install mrbayes //install the \"mrbayes\" tool [amazing analysis] //run your analysis conda deactivate //deactive this environment Search here for tools: https://anaconda.org/bioconda/ Using conda conda env list //what environments have you set up? conda list -n mrbayes // what's installed in the mrbayes environment","title":"Envs"},{"location":"modules/envs/#set-up-a-vitual-environment","text":"A virtual environment is an area to work in that is associated with certain tools and versions. It is often useful to work on different bioinformatics analyses or tasks in different virtual environments, as they may rely on particular versions of tools. One way to set this up is to use a package manager called conda. Install miniconda: https://docs.conda.io/en/latest/miniconda.html In the terminal (or equivalent), set up the bioconda channel: (More information: https://bioconda.github.io/ ) conda config --add channels defaults conda config --add channels bioconda conda config --add channels conda-forge This example shows how to set up and use an environment: conda create --name mrbayes //create new environment called mrbayes conda activate mrbayes //activate this environment conda install mrbayes //install the \"mrbayes\" tool [amazing analysis] //run your analysis conda deactivate //deactive this environment Search here for tools: https://anaconda.org/bioconda/","title":"Set up a vitual environment"},{"location":"modules/envs/#using-conda","text":"conda env list //what environments have you set up? conda list -n mrbayes // what's installed in the mrbayes environment","title":"Using conda"},{"location":"modules/galaxy/","text":"Galaxy Galaxy is a web platform for bioinformatics. There are many public Galaxy servers. Most are free to use, with some limits on the amount of data that can be stored. https://galaxyproject.org/ Australia\u2019s Galaxy server is https://usegalaxy.org.au/ . This is a free resource, accessed via the web page, and has lots of useful tools for analyses. Training for Galaxy Australia: https://galaxy-au-training.github.io/tutorials/ . Includes: Getting started, genome assembly and annotation, variant calling, RNA-seq, and workflows. Galaxy Training Network (for various Galaxy servers): https://training.galaxyproject.org/ . Includes: many tutorials in genomics, ecology, metabolomics, proteomics, and more.","title":"Galaxy"},{"location":"modules/galaxy/#galaxy","text":"Galaxy is a web platform for bioinformatics. There are many public Galaxy servers. Most are free to use, with some limits on the amount of data that can be stored. https://galaxyproject.org/ Australia\u2019s Galaxy server is https://usegalaxy.org.au/ . This is a free resource, accessed via the web page, and has lots of useful tools for analyses. Training for Galaxy Australia: https://galaxy-au-training.github.io/tutorials/ . Includes: Getting started, genome assembly and annotation, variant calling, RNA-seq, and workflows. Galaxy Training Network (for various Galaxy servers): https://training.galaxyproject.org/ . Includes: many tutorials in genomics, ecology, metabolomics, proteomics, and more.","title":"Galaxy"},{"location":"modules/help/","text":"Where to get help General or specific questions Biostars: https://www.biostars.org/ SeqAnswers: http://seqanswers.com/ StackOverflow: https://stackoverflow.com/ Bioinformatics Stack Exchange: https://bioinformatics.stackexchange.com/ Join the Plant Genomics Slack group: everyone welcome; for an invitation please email anna.syme @ rbg.vic.gov.au A software problem For command line tools, read the user documentation (this may be in the README on the code repository page). At the command line, try typing in any of these for information about inputs and options: toolname toolname -h toolname --help Some tools have groups on Slack, Gitter or Google that can be very responsive to questions. If the code is on GitHub, file an Issue (second tab at the top) Organisations Australasian Systematic Botany Society: http://asbs.org.au/ Australian Bioinformatics and Computational Biology Society: https://www.abacbs.org/","title":"Help"},{"location":"modules/help/#where-to-get-help","text":"General or specific questions Biostars: https://www.biostars.org/ SeqAnswers: http://seqanswers.com/ StackOverflow: https://stackoverflow.com/ Bioinformatics Stack Exchange: https://bioinformatics.stackexchange.com/ Join the Plant Genomics Slack group: everyone welcome; for an invitation please email anna.syme @ rbg.vic.gov.au A software problem For command line tools, read the user documentation (this may be in the README on the code repository page). At the command line, try typing in any of these for information about inputs and options: toolname toolname -h toolname --help Some tools have groups on Slack, Gitter or Google that can be very responsive to questions. If the code is on GitHub, file an Issue (second tab at the top) Organisations Australasian Systematic Botany Society: http://asbs.org.au/ Australian Bioinformatics and Computational Biology Society: https://www.abacbs.org/","title":"Where to get help"},{"location":"modules/hpc/","text":"Apart from your local computer or server, you can analyse data on high-performance computers. HPC options in Australia NCI NCI is Australia\u2019s National Computational Infrastructure. You can apply for HPC access directly, or via your organisation if it is affiliated. http://nci.org.au/access/getting-access-to-the-national-facility/ Spartan at Melbourne University Melbourne University is not affiliated with NCI. Instead, you can use Spartan: https://dashboard.hpc.unimelb.edu.au/ Using HPC systems Introduction to HPC https://www.melbournebioinformatics.org.au/tutorials/tutorials/hpc/hpc/ How to use Spartan Write a slurm script \u201cSlurm\u201d schedules all the jobs on the computer. The slurm script tells the computer what to run. How to write a script https://dashboard.hpc.unimelb.edu.au/getting_started/ Generate a site_description Check which software is installed A very basic slurm script","title":"Hpc"},{"location":"modules/hpc/#hpc-options-in-australia","text":"NCI NCI is Australia\u2019s National Computational Infrastructure. You can apply for HPC access directly, or via your organisation if it is affiliated. http://nci.org.au/access/getting-access-to-the-national-facility/ Spartan at Melbourne University Melbourne University is not affiliated with NCI. Instead, you can use Spartan: https://dashboard.hpc.unimelb.edu.au/","title":"HPC options in Australia"},{"location":"modules/hpc/#using-hpc-systems","text":"Introduction to HPC https://www.melbournebioinformatics.org.au/tutorials/tutorials/hpc/hpc/ How to use Spartan Write a slurm script \u201cSlurm\u201d schedules all the jobs on the computer. The slurm script tells the computer what to run. How to write a script https://dashboard.hpc.unimelb.edu.au/getting_started/ Generate a site_description Check which software is installed A very basic slurm script","title":"Using HPC systems"},{"location":"modules/nextflow/","text":"Nextflow The basics Install nextflow Write a script to run a workflow Nextflow documentation is good - prob delete this below A nextflow script Make a file called weather.nf nano weather.nf Add this to the script: #!/usr/bin process weather { echo true \"\"\" echo \"stormy\" \"\"\" } process is a step in the workflow echo \u201cstormy\u201d is the code block echo true allows it to print to screen the process is enclosed in these: { } Run the workflow: nextflow run weather.nf The screen will show: N E X T F L O W ~ version 19.01.0 Launching `weather.nf` [stupefied_legentil] - revision: eccaf7e744 [warm up] executor > local [4a/bb33c4] Submitted process > weather stormy Our output is on the last line Although we printed the output to the screen, nextflow has also saved the output in a default work directory See [4a/bb33c4] next to Submitted process - this is the name of the exectued process called \u201cweather\u201d. This is also a folder of output in your work directory. cd 4a/bb33c4 (replace with your process number) ls -la to see hidden files (these start with a . ) less .command.out to look at output Inputs, outputs, channels Example script: #!/usr/bin/env nextflow //env is a command that looks in the user's path for nextflow //this will use whatever version of nextflow is first in the path //input file params.in = \"reads.fasta\" //a channel called \"sequences\" sequences = file(params.in) process split { input: file 'zebra.fa' from sequences output: file 'part_zeb.fa' into records //\"records\" will be a new channel \"\"\" head -10 zebra.fa > part_zeb.fa //note any programs in here need to be installed in the environment \"\"\" } process show { input: file x from records //\"records\" is a channel output: stdout result \"\"\" less $x //refer to variable x \"\"\" } result.subscribe { println it } Links https://nf-co.re/nextflow_tutorial https://github.com/nextflow-io/awesome-nextflow","title":"Nextflow"},{"location":"modules/nextflow/#nextflow","text":"","title":"Nextflow"},{"location":"modules/nextflow/#the-basics","text":"Install nextflow Write a script to run a workflow Nextflow documentation is good - prob delete this below","title":"The basics"},{"location":"modules/nextflow/#a-nextflow-script","text":"Make a file called weather.nf nano weather.nf Add this to the script: #!/usr/bin process weather { echo true \"\"\" echo \"stormy\" \"\"\" } process is a step in the workflow echo \u201cstormy\u201d is the code block echo true allows it to print to screen the process is enclosed in these: { } Run the workflow: nextflow run weather.nf The screen will show: N E X T F L O W ~ version 19.01.0 Launching `weather.nf` [stupefied_legentil] - revision: eccaf7e744 [warm up] executor > local [4a/bb33c4] Submitted process > weather stormy Our output is on the last line Although we printed the output to the screen, nextflow has also saved the output in a default work directory See [4a/bb33c4] next to Submitted process - this is the name of the exectued process called \u201cweather\u201d. This is also a folder of output in your work directory. cd 4a/bb33c4 (replace with your process number) ls -la to see hidden files (these start with a . ) less .command.out to look at output","title":"A nextflow script"},{"location":"modules/nextflow/#inputs-outputs-channels","text":"Example script: #!/usr/bin/env nextflow //env is a command that looks in the user's path for nextflow //this will use whatever version of nextflow is first in the path //input file params.in = \"reads.fasta\" //a channel called \"sequences\" sequences = file(params.in) process split { input: file 'zebra.fa' from sequences output: file 'part_zeb.fa' into records //\"records\" will be a new channel \"\"\" head -10 zebra.fa > part_zeb.fa //note any programs in here need to be installed in the environment \"\"\" } process show { input: file x from records //\"records\" is a channel output: stdout result \"\"\" less $x //refer to variable x \"\"\" } result.subscribe { println it }","title":"Inputs, outputs, channels"},{"location":"modules/nextflow/#links","text":"https://nf-co.re/nextflow_tutorial https://github.com/nextflow-io/awesome-nextflow","title":"Links"},{"location":"modules/papers/","text":"Papers Some useful papers about plant bioinformatics. Kersey PJ: Plant genome sequences: past, present, future. Curr. Opin. Plant Biol. 2019, 48:1\u20138. One Thousand Plant Transcriptomes Initiative: One thousand plant transcriptomes and the phylogenomics of green plants. Nature 2019, 574:679\u2013685. Dominguez Del Angel V, Hjerde E, Sterck L, Capella-Gutierrez S, Notredame C, Vinnere Pettersson O, Amselem J, Bouri L, Bocs S, Klopp C, Gibrat J-F, Vlasova A, Leskosek BL, Soler L, Binzer-Panchal M, Lantz H: Ten steps to get started in Genome Assembly and Annotation. F1000Res. 2018, 7. Ghurye J, Pop M: Modern technologies and algorithms for scaffolding assembled genomes. PLoS Comput. Biol. 2019, 15:e1006994. Paajanen P, Kettleborough G, L\u00f3pez-Girona E, Giolai M, Heavens D, Baker D, Lister A, Cugliandolo F, Wilde G, Hein I, Macaulay I, Bryan GJ, Clark MD: A critical comparison of technologies for a plant genome sequencing project. Gigascience 2019, 8. Jung H, Winefield C, Bombarely A, Prentis P, Waterhouse P: Tools and Strategies for Long-Read Sequencing and De Novo Assembly of Plant Genomes. Trends Plant Sci. 2019, 24:700\u2013724. Kyriakidou M, Tai HH, Anglin NL, Ellis D, Str\u00f6mvik MV: Current Strategies of Polyploid Plant Genome Sequence Assembly. Front. Plant Sci. 2018, 9:1660. Ott A, Schnable JC, Yeh C-T, Wu L, Liu C, Hu H-C, Dalgard CL, Sarkar S, Schnable PS: Linked read technology for assembling large complex and polyploid genomes. BMC Genomics 2018, 19:651. Wendel JF, Jackson SA, Meyers BC, Wing RA: Evolution of plant genome architecture . Genome Biol. 2016, 17:37. Chase MW, Christenhusz MJM, Fay MF, Byng JW, Judd WS, Soltis DE, Mabberley DJ, Sennikov AN, Soltis PS, Stevens PF: An update of the Angiosperm Phylogeny Group classification for the orders and families of flowering plants: APG IV. Bot. J. Linn. Soc. 2016, 181:1\u201320. Sedlazeck FJ, Lee H, Darby CA, Schatz MC: Piercing the dark matter: bioinformatics of long-range sequencing and mapping. Nat. Rev. Genet. 2018, 19:329\u2013346. Brewer GE, Clarkson JJ, Maurin O, Zuntini AR, Barber V, Bellot S, Biggs N, Cowan RS, Davies NMJ, Dodsworth S, Edwards SL, Eiserhardt WL, Epitawalage N, Frisby S, Grall A, Kersey PJ, Pokorny L, Leitch IJ, Forest F, Baker WJ: Factors Affecting Targeted Sequencing of 353 Nuclear Genes From Herbarium Specimens Spanning the Diversity of Angiosperms. Front. Plant Sci. 2019, 10:1102. Comai L, Maheshwari S, Marimuthu MPA: \u200b Plant centromeres\u200b. Curr. Opin. Plant Biol. 2017, 36:158\u2013167. Vicient CM, Casacuberta JM: Impact of transposable elements on polyploid plant genomes. Ann. Bot. 2017, 120:195\u2013207. Wang W, Das A, Kainer D, Schalamun M, Morales-Suarez A, Schwessinger B, Lanfear R: The draft nuclear genome assembly of Eucalyptus pauciflora: new approaches to comparing de novo assemblies. bioRxiv 2019:678730.","title":"Papers"},{"location":"modules/papers/#papers","text":"Some useful papers about plant bioinformatics. Kersey PJ: Plant genome sequences: past, present, future. Curr. Opin. Plant Biol. 2019, 48:1\u20138. One Thousand Plant Transcriptomes Initiative: One thousand plant transcriptomes and the phylogenomics of green plants. Nature 2019, 574:679\u2013685. Dominguez Del Angel V, Hjerde E, Sterck L, Capella-Gutierrez S, Notredame C, Vinnere Pettersson O, Amselem J, Bouri L, Bocs S, Klopp C, Gibrat J-F, Vlasova A, Leskosek BL, Soler L, Binzer-Panchal M, Lantz H: Ten steps to get started in Genome Assembly and Annotation. F1000Res. 2018, 7. Ghurye J, Pop M: Modern technologies and algorithms for scaffolding assembled genomes. PLoS Comput. Biol. 2019, 15:e1006994. Paajanen P, Kettleborough G, L\u00f3pez-Girona E, Giolai M, Heavens D, Baker D, Lister A, Cugliandolo F, Wilde G, Hein I, Macaulay I, Bryan GJ, Clark MD: A critical comparison of technologies for a plant genome sequencing project. Gigascience 2019, 8. Jung H, Winefield C, Bombarely A, Prentis P, Waterhouse P: Tools and Strategies for Long-Read Sequencing and De Novo Assembly of Plant Genomes. Trends Plant Sci. 2019, 24:700\u2013724. Kyriakidou M, Tai HH, Anglin NL, Ellis D, Str\u00f6mvik MV: Current Strategies of Polyploid Plant Genome Sequence Assembly. Front. Plant Sci. 2018, 9:1660. Ott A, Schnable JC, Yeh C-T, Wu L, Liu C, Hu H-C, Dalgard CL, Sarkar S, Schnable PS: Linked read technology for assembling large complex and polyploid genomes. BMC Genomics 2018, 19:651. Wendel JF, Jackson SA, Meyers BC, Wing RA: Evolution of plant genome architecture . Genome Biol. 2016, 17:37. Chase MW, Christenhusz MJM, Fay MF, Byng JW, Judd WS, Soltis DE, Mabberley DJ, Sennikov AN, Soltis PS, Stevens PF: An update of the Angiosperm Phylogeny Group classification for the orders and families of flowering plants: APG IV. Bot. J. Linn. Soc. 2016, 181:1\u201320. Sedlazeck FJ, Lee H, Darby CA, Schatz MC: Piercing the dark matter: bioinformatics of long-range sequencing and mapping. Nat. Rev. Genet. 2018, 19:329\u2013346. Brewer GE, Clarkson JJ, Maurin O, Zuntini AR, Barber V, Bellot S, Biggs N, Cowan RS, Davies NMJ, Dodsworth S, Edwards SL, Eiserhardt WL, Epitawalage N, Frisby S, Grall A, Kersey PJ, Pokorny L, Leitch IJ, Forest F, Baker WJ: Factors Affecting Targeted Sequencing of 353 Nuclear Genes From Herbarium Specimens Spanning the Diversity of Angiosperms. Front. Plant Sci. 2019, 10:1102. Comai L, Maheshwari S, Marimuthu MPA: \u200b Plant centromeres\u200b. Curr. Opin. Plant Biol. 2017, 36:158\u2013167. Vicient CM, Casacuberta JM: Impact of transposable elements on polyploid plant genomes. Ann. Bot. 2017, 120:195\u2013207. Wang W, Das A, Kainer D, Schalamun M, Morales-Suarez A, Schwessinger B, Lanfear R: The draft nuclear genome assembly of Eucalyptus pauciflora: new approaches to comparing de novo assemblies. bioRxiv 2019:678730.","title":"Papers"},{"location":"modules/phylogenomics/","text":"Under development: 2019","title":"Phylogenomics"},{"location":"modules/rna/","text":"Under development: 2019","title":"Rna"},{"location":"modules/tools/","text":"Under development: 2019-2020 Commonly-used tools BLAST Sequence matching: https://blast.ncbi.nlm.nih.gov/Blast.cgi Paper: A Guide to BLAST: https://f1000research.com/documents/7-1435 Tutorial: BLAST: https://isugenomics.github.io/bioinformatics-workbook/dataAnalysis/blast/blast_index FastQC bwa Map sequences against reference database: https://github.com/lh3/bwa minimap2 Map long read sequences against reference database: https://github.com/lh3/minimap2 Samtools Tools for processing alignment files: https://www.htslib.org/ Bedtools Spades Genome assembly: http://cab.spbu.ru/software/spades/ Freebayes Variant calling: https://github.com/ekg/freebayes IQ-Tree Phylogenetics: http://www.iqtree.org/ Mothur Metagenomics: https://www.mothur.org/ Search for tools biotool? Containerised tools - docker hub.","title":"Tools"},{"location":"modules/tools/#commonly-used-tools","text":"BLAST Sequence matching: https://blast.ncbi.nlm.nih.gov/Blast.cgi Paper: A Guide to BLAST: https://f1000research.com/documents/7-1435 Tutorial: BLAST: https://isugenomics.github.io/bioinformatics-workbook/dataAnalysis/blast/blast_index FastQC bwa Map sequences against reference database: https://github.com/lh3/bwa minimap2 Map long read sequences against reference database: https://github.com/lh3/minimap2 Samtools Tools for processing alignment files: https://www.htslib.org/ Bedtools Spades Genome assembly: http://cab.spbu.ru/software/spades/ Freebayes Variant calling: https://github.com/ekg/freebayes IQ-Tree Phylogenetics: http://www.iqtree.org/ Mothur Metagenomics: https://www.mothur.org/","title":"Commonly-used tools"},{"location":"modules/tools/#search-for-tools","text":"biotool? Containerised tools - docker hub.","title":"Search for tools"},{"location":"modules/tutorials/","text":"Under development: 2019-2020 Bioinformatics tutorials Priority topics currently under development are genome assembly, phylogenomics, variant calling, and RNA-seq. These will appear as items in the left hand panel. Here are some links to resources that are particularly useful for getting started in plant bioinformatics: Unix: Software Carpentry tutorial: http://swcarpentry.github.io/shell-novice/ Guide to Unix: https://f1000research.com/documents/7-1436 Python: Software carpentry tutorial: http://swcarpentry.github.io/python-novice-gapminder/ Biopython: https://biopython.org/ Solving biological problems with python: http://pycam.github.io/ R: Software carpentry tutorial: http://swcarpentry.github.io/r-novice-inflammation/ Git: Software carpentry tutorial: http://swcarpentry.github.io/git-novice/ Algorithms: Coursera: https://www.coursera.org/learn/dna-sequencing Algorithms: Ben Langmead: https://www.youtube.com/user/BenLangmead Containers: https://github.com/pawseysc/bio-workshop-18 Docker: https://www.melbournebioinformatics.org.au/tutorials/tutorials/docker/docker/ Data Carpentry Genomics Workshop: https://datacarpentry.org/lessons/#genomics-workshop ISU Genomics: https://isugenomics.github.io/bioinformatics-workbook/ Gene expression on Coursera https://www.coursera.org/learn/plant-bioinformatics Sequence analysis workshop UCDavis: https://angus.readthedocs.io/en/2018/ Melbourne Bioinformatics: https://www.melbournebioinformatics.org.au/training-and-events/ Bioinformatics file formats and ontology: http://bioportal.bioontology.org/ontologies/EDAM The Biostar Handbook (not free): https://www.biostarhandbook.com/index.html Test yourself! Rosalind bioinformatics problems: http://rosalind.info/problems/locations/","title":"Tutorials"},{"location":"modules/tutorials/#bioinformatics-tutorials","text":"Priority topics currently under development are genome assembly, phylogenomics, variant calling, and RNA-seq. These will appear as items in the left hand panel. Here are some links to resources that are particularly useful for getting started in plant bioinformatics: Unix: Software Carpentry tutorial: http://swcarpentry.github.io/shell-novice/ Guide to Unix: https://f1000research.com/documents/7-1436 Python: Software carpentry tutorial: http://swcarpentry.github.io/python-novice-gapminder/ Biopython: https://biopython.org/ Solving biological problems with python: http://pycam.github.io/ R: Software carpentry tutorial: http://swcarpentry.github.io/r-novice-inflammation/ Git: Software carpentry tutorial: http://swcarpentry.github.io/git-novice/ Algorithms: Coursera: https://www.coursera.org/learn/dna-sequencing Algorithms: Ben Langmead: https://www.youtube.com/user/BenLangmead Containers: https://github.com/pawseysc/bio-workshop-18 Docker: https://www.melbournebioinformatics.org.au/tutorials/tutorials/docker/docker/ Data Carpentry Genomics Workshop: https://datacarpentry.org/lessons/#genomics-workshop ISU Genomics: https://isugenomics.github.io/bioinformatics-workbook/ Gene expression on Coursera https://www.coursera.org/learn/plant-bioinformatics Sequence analysis workshop UCDavis: https://angus.readthedocs.io/en/2018/ Melbourne Bioinformatics: https://www.melbournebioinformatics.org.au/training-and-events/ Bioinformatics file formats and ontology: http://bioportal.bioontology.org/ontologies/EDAM The Biostar Handbook (not free): https://www.biostarhandbook.com/index.html Test yourself! Rosalind bioinformatics problems: http://rosalind.info/problems/locations/","title":"Bioinformatics tutorials"},{"location":"modules/variants/","text":"Under development: 2019","title":"Variants"}]}